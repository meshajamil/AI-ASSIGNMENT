from tensorflow.keras.datasets import fashion_mnist
(train_images, train_labels), (test_images, test_labels)=fashion_mnist.load_data()
print(len(train_images))
print(len(train_labels))
print(len(test_images))
print(len(test_labels))
print(train_images.shape)
print(test_images.shape)
print(train_labels.shape)
print(test_labels.shape)
class_names = ['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat',
               'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']
import matplotlib.pyplot as plt
num = 15
item=train_labels[num]
print("Class Label:", class_names[item] )
plt.imshow(train_images[num], cmap=plt.cm.binary)
plt.show()
Class Label: Ankle boot
import numpy as np
print(train_labels)
print(np.unique(train_labels))
print(test_labels)
print(np.unique(test_labels))
from tensorflow.keras import models
from tensorflow.keras import layers

network = models.Sequential()

network.add(layers.Dense(512, activation='relu', input_shape=(28*28,)))
network.add(layers.Dense(10, activation="softmax"))
network.compile(optimizer="rmsprop", loss="categorical_crossentropy", metrics=["accuracy"])train_images=train_images.reshape((60000, 28*28))
train_images=train_images.astype("float32")/255

test_images=test_images.reshape((10000, 28*28))
test_images=test_images.astype("float32")/255
train_labels[0]
from tensorflow.keras.utils import to_categorical
train_labels = to_categorical(train_labels)
test_labels = to_categorical(test_labels)
network.fit(train_images, train_labels, epochs=5, batch_size=128)
test_loss, test_acc = network.evaluate(test_images, test_labels)
print("Test Loss: ", test_loss)
print("Test Accuracy:", test_acc )

